# prefix
set -g prefix `
bind ` send-prefix
unbind C-b

# $TERM
set -g default-terminal 'screen-256color'
set -g terminal-overrides ',xterm-256color:Tc'

# auto window rename
set -g automatic-rename

# auto renumber window
set -g renumber-windows on

# base-1 indexing
set -g base-index 1
set -g pane-base-index 1

# escape time
set -s escape-time 0

# scrollback buffer
set -g history-limit 100000

# vim focus issues fix
set -g focus-events on

# status
set -g status off
set -g status-position top
set -g status-interval 1
set -g status-left ''
set -g status-right ''

# window status
set -g window-status-current-format '#[fg=black,bg=white] #I #[fg=black,bg=white]#W '
set -g window-status-format '#[fg=white,bg=black] #I #[fg=white,bg=black]#W '

# colors
set -g status-bg black
set -g status-fg white

set -g display-panes-colour black
set -g display-panes-active-colour brightblack
set -g pane-border-fg brightblack
set -g pane-active-border-bg black
set -g pane-active-border-fg brightblack

set -g message-fg black
set -g message-bg brightblack

# bindings
set -g mode-keys vi
set -g status-keys emacs

# copy bindings
yank='xclip -in -selection clipboard'

bind -T copy-mode-vi 'v'   send-keys -X begin-selection
bind -T copy-mode-vi 'V'   send-keys -X select-line
bind -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind -T copy-mode-vi 'y'   send-keys -X copy-pipe $yank

# reload bindings
bind 'R' source-file ~/.tmux.conf \; display-message 'Sourced .tmux.conf'

# new bindings
is_many_windows='[ $(tmux list-window | wc -l) -gt 1 ]'

bind '~' new-window -a -c '~'                    \; if $is_many_windows 'set status on'
bind 't' new-window -a -c '#{pane_current_path}' \; if $is_many_windows 'set status on'

# kill bindings
is_one_window='[ $(tmux list-window | wc -l) -eq 1 ]'

bind 'c' kill-pane    \; if $is_one_window 'set status off'
bind 'o' kill-pane -a \; if $is_one_window 'set status off'
bind 'x' kill-window  \; if $is_one_window 'set status off'

# split bindings
bind 's' split-window -v -c '#{pane_current_path}'
bind 'v' split-window -h -c '#{pane_current_path}'

# resize bindings
bind -r 'H' resize-pane -L 8
bind -r 'J' resize-pane -D 4
bind -r 'K' resize-pane -U 4
bind -r 'L' resize-pane -R 8

# pane movement bindings
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -r 'h' if '$is_vim' 'send-keys `h' 'select-pane -L'
bind -r 'j' if '$is_vim' 'send-keys `j' 'select-pane -D'
bind -r 'k' if '$is_vim' 'send-keys `k' 'select-pane -U'
bind -r 'l' if '$is_vim' 'send-keys `l' 'select-pane -R'

# window movement bindings
bind -r 'p' previous-window
bind -r 'n' next-window

bind -n 'M-1' select-window -t 1
bind -n 'M-2' select-window -t 2
bind -n 'M-3' select-window -t 3
bind -n 'M-4' select-window -t 4
bind -n 'M-5' select-window -t 5
bind -n 'M-6' select-window -t 6
bind -n 'M-7' select-window -t 7
bind -n 'M-8' select-window -t 8
bind -n 'M-9' select-window -t 9

# window swap bindings
bind 'M-1' swap-window -t 1
bind 'M-2' swap-window -t 2
bind 'M-3' swap-window -t 3
bind 'M-4' swap-window -t 4
bind 'M-5' swap-window -t 5
bind 'M-6' swap-window -t 6
bind 'M-7' swap-window -t 7
bind 'M-8' swap-window -t 8
bind 'M-9' swap-window -t 9
