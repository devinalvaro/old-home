extends c

# Main
snippet incc
#include <${1:iostream}>
endsnippet

snippet binc
#include <boost/${1:shared_ptr}.hpp>
endsnippet

# STL Collections
snippet array
array<${1:T}, ${2:N}> ${3};
endsnippet

snippet vector
vector<${1:T}> ${2};
endsnippet

snippet deque
deque<${1:T}> ${2};
endsnippet

snippet flist
forward_list<${1:T}> ${2};
endsnippet

snippet list
list<${1:T}> ${2};
endsnippet

snippet set
set<${1:T}> ${2};
endsnippet

snippet map
map<${1:Key}, ${2:T}> ${3};
endsnippet

snippet mset
multiset<${1:T}> ${2};
endsnippet

snippet mmap
multimap<${1:Key}, ${2:T}> ${3};
endsnippet

snippet uset
unordered_set<${1:T}> ${2};
endsnippet

snippet umap
unordered_map<${1:Key}, ${2:T}> ${3};
endsnippet

snippet umset
unordered_multiset<${1:T}> ${2};
endsnippet

snippet ummap
unordered_multimap<${1:Key}, ${2:T}> ${3};
endsnippet

snippet stack
stack<${1:T}> ${2};
endsnippet

snippet queue
queue<${1:T}> ${2};
endsnippet

snippet pqueue
priority_queue<${1:T}> ${2};
endsnippet

## Input/Output
snippet cout
cout << ${1} << endl;
endsnippet

snippet cin
cin >> ${1};
endsnippet

## Iteration
snippet fore
for (${1:auto} ${2:i} : ${3:container}) {
	${4}
}
endsnippet

snippet iter
for (${1:vector}<${2:type}>::${3:iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); $4++) {
	${6}
}
endsnippet

## Competitive Programming
snippet cp
#include <algorithm>
#include <bitset>
#include <climits>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <stack>
#include <string>
#include <vector>

using namespace std;

int main()
{
	ios_base::sync_with_stdio(0);

	${1}
}
endsnippet

snippet ll
long long ${1}
endsnippet

snippet vi
vector<int> ${1}
endsnippet

snippet vvi
vector<vector<int>> ${1}
endsnippet

snippet vii
vector<pair<int, int>> ${1}
endsnippet

snippet ii
pair<int, int> ${1}
endsnippet

snippet iii
pair<int, pair<int, int>> ${1}
endsnippet
